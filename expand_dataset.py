import cv2
import numpy as np
import os
from PIL import Image, ImageFilter, ImageEnhance
import random

# üîπ –ü—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º
screenshots_path = "letters_screenshots"  # –ì–¥–µ –ª–µ–∂–∞—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
dataset_path = "dataset_generated_2"      # –ö—É–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

# üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫
if not os.path.exists(screenshots_path):
    raise FileNotFoundError(f"‚ùå –û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ {screenshots_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

if not os.path.exists(dataset_path):
    raise FileNotFoundError(f"‚ùå –û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ {dataset_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

# üîπ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
final_size = 32  # –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –º–æ–¥–µ–ª–∏
num_new_images = 200  # –°–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–π –±—É–∫–≤—ã

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–≥–æ —à—É–º–∞
def add_salt_pepper_noise(image, amount=0.002):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —à—É–º Salt & Pepper (—á—ë—Ä–Ω—ã–µ –∏ –±–µ–ª—ã–µ –ø–∏–∫—Å–µ–ª–∏)"""
    img_np = np.array(image)
    total_pixels = img_np.size
    num_salt = int(amount * total_pixels)  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–µ–ª—ã—Ö –ø–∏–∫—Å–µ–ª–µ–π
    num_pepper = int(amount * total_pixels)  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á—ë—Ä–Ω—ã—Ö –ø–∏–∫—Å–µ–ª–µ–π

    # –î–æ–±–∞–≤–ª—è–µ–º –±–µ–ª—ã–µ –ø–∏–∫—Å–µ–ª–∏ (—Å–æ–ª—å)
    for _ in range(num_salt):
        x, y = random.randint(0, img_np.shape[0] - 1), random.randint(0, img_np.shape[1] - 1)
        img_np[x, y] = 255

    # –î–æ–±–∞–≤–ª—è–µ–º —á—ë—Ä–Ω—ã–µ –ø–∏–∫—Å–µ–ª–∏ (–ø–µ—Ä–µ—Ü)
    for _ in range(num_pepper):
        x, y = random.randint(0, img_np.shape[0] - 1), random.randint(0, img_np.shape[1] - 1)
        img_np[x, y] = 0

    return Image.fromarray(img_np)

# üîπ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –±—É–∫–≤—É
for letter in os.listdir(screenshots_path):
    letter_folder = os.path.join(screenshots_path, letter)

    # üîπ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, `.DS_Store`)
    if not os.path.isdir(letter_folder):
        continue

    dataset_folder = os.path.join(dataset_path, letter)

    # –ï—Å–ª–∏ –±—É–∫–≤—ã –Ω–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–∞—Ç–∞—Å–µ—Ç–µ ‚Äì —Å–æ–∑–¥–∞—ë–º –µ—ë
    if not os.path.exists(dataset_folder):
        os.makedirs(dataset_folder)
        print(f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –ø–∞–ø–∫–∞ {dataset_folder}")

    # –ë–µ—Ä—ë–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (—Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏)
    image_files = [f for f in os.listdir(letter_folder) if f.endswith(('.png', '.jpg', '.jpeg'))]
    
    if not image_files:
        print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –±—É–∫–≤—É {letter}, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.")
        continue

    existing_images = len(os.listdir(dataset_folder))  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ä—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

    # üîπ –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    for i in range(num_new_images):
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∏—Å—Ö–æ–¥–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
        img_path = os.path.join(letter_folder, random.choice(image_files))
        img = Image.open(img_path).convert("L")  # –ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

        # ‚úÖ –ü—Ä–∏–≤–æ–¥–∏–º –∫ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–º—É —Ä–∞–∑–º–µ—Ä—É
        img = img.resize((final_size, final_size))

        # ‚úÖ –°–ª–∞–±–æ–µ —Ä–∞–∑–º—ã—Ç–∏–µ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω–æ)
        if random.random() > 0.7:
            img = img.filter(ImageFilter.GaussianBlur(0.5))  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞–∑–º—ã—Ç–∏–µ

        # ‚úÖ –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–µ –ø–æ–≤–æ—Ä–æ—Ç—ã (¬±15¬∞)
        if random.random() > 0.5:
            img = img.rotate(random.uniform(-15, 15), fillcolor=255)

        # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏
        if random.random() > 0.5:
            enhancer = ImageEnhance.Brightness(img)
            img = enhancer.enhance(random.uniform(0.7, 1.3))  # ¬±30% —è—Ä–∫–æ—Å—Ç–∏

        # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —à—É–º (Salt & Pepper)
        if random.random() > 0.5:
            img = add_salt_pepper_noise(img, amount=0.001)  # –ú–µ–Ω—å—à–µ —à—É–º–∞

        # ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –¥–∞—Ç–∞—Å–µ—Ç
        file_name = os.path.join(dataset_folder, f"scr_gen_{existing_images + i}.png")
        img.save(file_name)

print("‚úÖ –î–∞—Ç–∞—Å–µ—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å—à–∏—Ä–µ–Ω –Ω–æ–≤—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏!")
