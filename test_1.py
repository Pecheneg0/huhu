import torch
import cv2
import numpy as np
import matplotlib.pyplot as plt
from model import ArmenianLetterNet  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å

# üîπ –ü–æ—Ä–æ–≥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
confidence_threshold = 0.75

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
model = ArmenianLetterNet()
model.load_state_dict(torch.load("armenian_letters_model.pth", map_location="cpu"))
model.eval()

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
image_path = "dataset_generated_1/‘±/0.png"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
image = cv2.resize(image, (32, 32))
image_tensor = torch.tensor(image, dtype=torch.float32).unsqueeze(0).unsqueeze(0) / 255.0

# üîπ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
with torch.no_grad():
    output = model(image_tensor)
    probabilities = torch.nn.functional.softmax(output, dim=1)
    confidence, predicted_class = torch.max(probabilities, 1)

confidence_value = confidence.item()

# üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if confidence_value >= confidence_threshold:
    recognized_letter = chr(1329 + predicted_class.item())  # –ê—Ä–º—è–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –Æ–Ω–∏–∫–æ–¥–∞ 1329
    text_color = "green"
    result_text = f"‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –±—É–∫–≤–∞: {recognized_letter} (–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence_value:.2f})"
else:
    recognized_letter = "‚ùì"  # –°–∏–º–≤–æ–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –±—É–∫–≤—ã
    text_color = "red"
    result_text = "‚ö†Ô∏è –ë—É–∫–≤–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞ —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é!"

# üîπ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
image_rgb = cv2.cvtColor(image, cv2.COLOR_GRAY2RGB)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ü–≤–µ—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
plt.figure(figsize=(5, 5))
plt.imshow(image_rgb, cmap="gray")
plt.axis("off")
plt.title(result_text, color=text_color, fontsize=12, weight="bold")
plt.show()

# üîπ –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
print(result_text)
print(f"üî¢ –ò–Ω–¥–µ–∫—Å –±—É–∫–≤—ã: {predicted_class.item()} | üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence_value:.2f}")
